package member.model.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import static common.JDBCTemplate.close;

import member.model.vo.Member;



public class MemberDao {
	/**
	 * 
	 * DAO 에서 하는거
	 * 3.PreparedStatement객체 생성 (미완성쿼리- 물음표가있는거)
	 * 3-1. ? 값대입
	 * 4. 실행과 동시에 리턴값 받음  DML(executeUpdate) -> int 정수형으로 리턴,
	 *                       DQL(executeQuery) -> ResultSet 으로 리턴
	 * 4-1. ResultSet을 자바객체로 옮겨담기   
	 * 5. 자원반납(생성역순 rset - pstmt - conn)
	 *
	 */

	public List<Member> selectAll(Connection conn) {
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		String sql = "select * from member order by enroll_date desc"; //가입일 역순으로 조회했음
		List<Member> list = null;
	
		//3.PreparedStatement객체 생성 (미완성쿼리- 물음표가있는거)
		try {
			pstmt = conn.prepareStatement(sql);
			//* 3-1. ? 값대입 - 여기선 필요없음 이미 값 대입 되어있어서
			
			// * 4. 실행과 동시에 리턴값 받음  DML(executeUpdate) -> int 정수형으로 리턴,
			//*                       DQL(executeQuery) -> ResultSet 으로 리턴
			rset = pstmt.executeQuery();
			//* 4-1. ResultSet을 자바객체로 옮겨담기  
			list = new ArrayList<>();
			while(rset.next()) {
				String memberId = rset.getString("member_id");
				String password = rset.getString("password");
				String memberName = rset.getString("member_name");
				String gender = rset.getString("gender");
				int age = rset.getInt("age");
				String email = rset.getString("email");
				String phone = rset.getString("phone");
				String address = rset.getString("address");
				String hobby = rset.getString("hobby");
				Date enrollDate = rset.getDate("enroll_date");
				Member member = new Member(memberId,password,memberName,gender,age,email,phone,address,hobby,enrollDate);
				list.add(member);
			    
			    }
			
			
			} catch (SQLException e) {
				e.printStackTrace();
			} finally {
				//5. 자원반납(생성역순 rset - pstmt)
				close(rset);
				close(pstmt);
			}
			
			return list;
		}

}	


